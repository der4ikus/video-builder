#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Fast Video Builder —Å–µ—Ä–≤–∏—Å–æ–≤

echo "üìä Fast Video Builder - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
show_services() {
    echo ""
    echo "üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose ps
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ GPU
show_gpu() {
    echo ""
    echo "üéÆ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ GPU:"
    if command -v nvidia-smi &> /dev/null; then
        nvidia-smi --query-gpu=name,utilization.gpu,memory.used,memory.total,temperature.gpu --format=csv,noheader,nounits | \
        while IFS=',' read -r name util mem_used mem_total temp; do
            echo "  GPU: $name"
            echo "  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${util}%"
            echo "  –ü–∞–º—è—Ç—å: ${mem_used}MB / ${mem_total}MB"
            echo "  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C"
        done
    else
        echo "  ‚ö†Ô∏è nvidia-smi –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ API
show_api_stats() {
    echo ""
    echo "üåê –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ API:"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    if curl -s http://localhost:8000/health > /dev/null; then
        health=$(curl -s http://localhost:8000/health | python3 -c "import sys, json; data=json.load(sys.stdin); print(f\"–°—Ç–∞—Ç—É—Å: {data['status']}, Redis: {data['services']['redis']}, MinIO: {data['services']['minio']}\")")
        echo "  $health"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏
        queue_stats=$(curl -s http://localhost:8000/api/v1/queue/stats | python3 -c "import sys, json; data=json.load(sys.stdin); print(f\"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {data['active_tasks']}, –í –æ—á–µ—Ä–µ–¥–∏: {data['queued_tasks']}, –í–æ—Ä–∫–µ—Ä–æ–≤: {len(data['workers'])}\")" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏")
        echo "  $queue_stats"
    else
        echo "  ‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
show_resources() {
    echo ""
    echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    
    # CPU –∏ –ø–∞–º—è—Ç—å
    echo "  CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
    echo "  RAM: $(free -h | awk '/^Mem:/ {printf "%.1f/%.1f GB (%.0f%%)", $3/1024/1024/1024, $2/1024/1024/1024, $3/$2*100}')"
    
    # –î–∏—Å–∫
    echo "  –î–∏—Å–∫: $(df -h / | awk 'NR==2 {print $3"/"$2" ("$5")"}')"
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    temp_size=$(du -sh /tmp/video_jobs 2>/dev/null | cut -f1 || echo "0")
    temp_count=$(find /tmp/video_jobs -type d -name "*-*-*-*-*" 2>/dev/null | wc -l || echo "0")
    echo "  –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: $temp_size ($temp_count –∑–∞–¥–∞—á)"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ–≤
show_logs() {
    echo ""
    echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ (10 —Å—Ç—Ä–æ–∫):"
    echo "--- API ---"
    docker-compose logs --tail=5 api | tail -5
    echo "--- Worker ---"
    docker-compose logs --tail=5 worker | tail -5
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
if [ "$1" = "--watch" ] || [ "$1" = "-w" ]; then
    # –†–µ–∂–∏–º –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    while true; do
        clear
        echo "üìä Fast Video Builder - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫)"
        echo "=================================="
        echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
        
        show_services
        show_gpu
        show_api_stats
        show_resources
        
        sleep 5
    done
else
    # –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    show_services
    show_gpu
    show_api_stats
    show_resources
    show_logs
    
    echo ""
    echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: $0 --watch"
    echo "  –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏: docker-compose logs -f"
    echo "  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPU: watch -n 1 nvidia-smi"
    echo "  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Docker: docker stats"
fi

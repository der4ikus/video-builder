#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Fast Video Builder –Ω–∞ GPU —Å–µ—Ä–≤–µ—Ä–µ

set -e

echo "üöÄ Fast Video Builder - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–∞–ø–∫–µ gpu-server"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
else
    echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
else
    echo "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º NVIDIA Docker
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º NVIDIA Docker..."
if ! docker run --rm --gpus all nvidia/cuda:11.8-runtime-ubuntu22.04 nvidia-smi &> /dev/null; then
    echo "‚ö†Ô∏è  NVIDIA Docker –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NVIDIA Container Runtime
    distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
    curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -
    curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list
    apt update && apt install -y nvidia-docker2
    systemctl restart docker
    
    echo "‚úÖ NVIDIA Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "‚úÖ NVIDIA Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cp env.example .env
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ env.example"
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–µ–π
echo "üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏..."
mkdir -p models
mkdir -p /tmp/video_jobs

# –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª–∏ TTS –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo "üì• –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ TTS..."
if [ ! -f "models/kokoro-v1.0.onnx" ]; then
    echo "–°–∫–∞—á–∏–≤–∞–µ–º kokoro-v1.0.onnx..."
    wget -O models/kokoro-v1.0.onnx https://github.com/nazdridoy/kokoro-tts/releases/download/v1.0.0/kokoro-v1.0.onnx
fi

if [ ! -f "models/voices-v1.0.bin" ]; then
    echo "–°–∫–∞—á–∏–≤–∞–µ–º voices-v1.0.bin..."
    wget -O models/voices-v1.0.bin https://github.com/nazdridoy/kokoro-tts/releases/download/v1.0.0/voices-v1.0.bin
fi

echo "‚úÖ –ú–æ–¥–µ–ª–∏ –≥–æ—Ç–æ–≤—ã"

# –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –≤ worker
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –≤ worker..."
cp models/* worker/code/ 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
echo "üéÆ –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU..."
if nvidia-smi &> /dev/null; then
    echo "‚úÖ GPU –¥–æ—Å—Ç—É–ø–µ–Ω:"
    nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits
else
    echo "‚ö†Ô∏è  GPU –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥—Ä–∞–π–≤–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
docker-compose build

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: ./scripts/start.sh"
echo "2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API: python3 scripts/test_api.py"
echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: http://localhost:8000/docs"
echo ""
